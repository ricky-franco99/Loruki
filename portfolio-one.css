@import url('https://fonts.googleapis.com/css2?family=Lato:wght@300&display=swap');

/* When you have multiple elements using the smae properties you could set a custom
property so they could all have the same value */
:root{
    --primary-color: #047aed;
    --secondary-color: #1c3fa8;
    --dark-color:#002240;
    --light-color: #f4f4f4;
    --success-color: #58b85c;
    --error-color: #d9534f;
}
/*Resets CSS for all elemnts since evry browser has deafult css*/
*{
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

body{
    font-family: 'Lato', sans-serif;
    color: #333;
    line-height: 1.6;

}


ul{
    list-style-type: none;
}
a{
    text-decoration: none;
    color: #333;
}

h1, h2{
    font-weight: 300;
    line-height: 1.2;
    margin: 10px 0;
}

p{
    margin: 10px 0;
}
/* This'll make the images to take 100% of their container
rather then just busting out and covering other elements*/
img{
    width: 100%;
}

/* Hiiden Netlify Navbar */
.hidden{
    visibility: hidden;
    height: 0;
}


/* Navbar */

.navbar{
    justify-content: space-between;
    background-color: var(--primary-color);
    color: #fff;
    height: 70px;

}
.navbar ul{
    display: flex;
}

.navbar a{
    color: #fff;
    padding: 10px;
    margin: 0 5px;
}
.navbar a:hover{
    border-bottom: 2px #fff solid;
}

.navbar .flex{
 justify-content: space-between;
}
/* Showcase */
.showcase{
    height: 400px;
    background-color: var(--primary-color);
    /* Changes text color */
    color: #fff;
    position: relative;
}
.showcase h1{
    font-size: 40px;

}
/* Even though we set {p] to 10px earlier specificty overwrote that property*/
.showcase p{
    margin: 20px 0;
}

.showcase .grid{
    /* This give the from a 3d effect as it goes over the container since
    the overflow of px is visible */
    overflow: visible;
    grid-template-columns: repeat(2,1fr);
    gap: 20px;
}

.showcase-text{
    animation: slideInFromLeft 1s ease-in;
}
.showcase-form{
    position: relative;
    top: 60px;
    height: 350px;
    width: 400px;
    padding: 40px;
    z-index: 100;
    justify-self: flex-end;
    animation: slideinfromright 1s ease-in;
}

/* Styling inside the form */
.showcase-form .form-control{
    margin: 30px 0;
}

/* Styling the inside on the form inputs */
/* This is how you target specific inputs, we couldnt target all
the inputs since we dont want these styling properties to affect the sned button
thus we targerted each input type specifically */
.showcase-form input[type='text'],
.showcase-form input[type='email']{
    border: 0;
    border-bottom: 1px solid #b4becb;
    /* Width determines how long the bottom border will go */
    width: 100%;
    padding: 3px;
}
/* Peventing there from being a border when you click on a form input */
.showcase-form input:focus{
    outline: none;
}
.showcase::before,.showcase::after{
    content: '';
    position: absolute;
    height: 100px;
    bottom: -70px;
    right: 0;
    left: 0;
    background:#fff;
    transform: skewY(-3deg);
    /* These "transforms" are so that every web browser is able to understand
    and process this slanted affect. */
    /* For chrome and safari */
    -webkit-transform: skewY(-3deg);
    /* Mozilla */
    -moz-transform: skewY(-3deg);
    /* Microsoft */
    -ms-transform: skewY(-3deg);
}

/* Stats */
.stats{
    /* Pushes all the icons out from under the angled white space*/
    padding-top: 100px;
    animation: slideinfrombottom 1s ease-in;
}
.stats-heading{
    max-width: 500px;
    /* Centers the "Welcome" paragraph*/
    margin: auto;
}

.stats .grid .h3{
    font-size: 35px;
}

.stats .grid p{
    font-size: 20px;
    font-weight: bold;
}

/* CLI */
.cli .grid{
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2,1fr );
}

/* This means the first 'child'/ element in the container
 of .cli and .grid will have the following properties
 */
.cli .grid > *:first-child{
    grid-column: 1 / span 2;
    grid-row: 1/ span 2;
}
/*
grid-column: 1 / span 2;
grid-row: 1/ span 2;
This means I want it to start at the 1st row or column
 and span to the 2nd column or row
} */

/* cloud */

.cloud .grid{
    grid-template-columns: 4fr 3fr ;
}

/* Supported Languages */

/* Makes the language cards responsive */
.languages .flex{
    flex-wrap: wrap;
}
.languages .card{
    text-align: center;
    margin: 18px 10px 40px;
    /* Makes the hover effect smoother */
    transition: transform 0.2 ease-in;
}
.languages .card h4{
    font-size: 20px;
    margin-bottom: 10px;
}

/* Makes the language cards go up */
.languages .card:hover{
    transform: translateY(-15px);
}

/* Features Page*/

.features-head .grid{
    grid-template-columns: repeat(2,1fr);
}

.features-head img,
.features-sub-head img{
    width: 300px;
    justify-self: flex-end;
}

/* Features Sub-Head */
.features-sub-head .grid{
    grid-template-columns: repeat(2,1fr);
}

/* Features Main */
.features-main .card{
    height: 90%;
}

/* Gives space between icon and text */
.features-main .card i{
    margin: 0 10px;
}
.features-main .grid{
    grid-template-columns: repeat(3,3fr);
    grid-template-rows: repeat(3,3fr);
    gap: 10px;
}

.features-main .grid > *:first-child{
    grid-column: 1 / span 3;
    grid-row: 1/ span 1;
}

.features-main .grid > *:nth-child(2){
    grid-column: 1 / span 2;
    grid-row: 2/ span 1;
}

/* Documentation Page */

.doc-head .grid{
    grid-template-columns: repeat(2, 1fr);
}

.doc-head .grid img{
    width: 300px;
    height: 300px;
    justify-self: flex-end;
}
/* Documentation Main */
.docs-main h3{
    margin: 20px 0;
}
.docs-main .grid{
    grid-template-columns: 1fr 2fr;
    align-items: flex-start;
}
.docs-main nav li{
    font-size: 17px;
    padding-bottom: 5px;
    margin-bottom: 5px;
    border-bottom: 1px #ccc solid;

}

.docs-main a:hover{
    font-weight: 800;
}
.docs-main .grid .card .docs-install{
    margin: 5px 0;
}

.docs-main .card pre{
    background-color: var(--dark-color);
    border-radius: 5px;
    padding: 12px 0;
}
.docs-main .card code{
    color: #fff;
    border-radius: 5px;
    margin-left: 10px;
}

/* Footer */

.footer .container a{
    color: #fff;
    margin: 0 10px;
}


/* Animations */
@keyframes slideInFromLeft{
    0%{
        transform: translateX(-100%);
    }

    100%{
        transform: translateX(0);
    }
}

@keyframes slideinfromright{
    0%{
        transform: translateX(100%);
    }

    100%{
        transform: translateX(0);
    }
}
@keyframes slideinfromtop{
    0%{
        transform: translateY(-100%);
    }

    100%{
        transform: translatex(0);
    }
}
@keyframes slideinfrombottom{
    0%{
        transform: translateY(100%);
    }

    100%{
        transform: translatex(0);
    }
}

/* Tablets and Under */
/* Tablets and Under */
@media (max-width: 755px){

    .grid,
    .showcase .grid,
    .stats .grid,
    .cli .grid,
    .cloud .grid,
    .features-head .grid,
    .features-sub-head .grid,
    .features-main .grid,
     .doc-head .grid,
     .docs-main .grid{
        grid-template-columns: 1fr;
        grid-template-rows: 1fr;
    }
    .showcase{
        height: auto;
    }

    .showcase-text{
        text-align: center;
        margin-top: 40px;
        animation: slideinfromtop 1s ease-in;
    }
    .showcase-form{
        /* Centers form horizontally */
        justify-self: center;
        /* Centers element vertivally */
        margin: auto;
        animation: slideinfrombottom 1s ease-in;
    }
    .stats{
        animation: none;
    }

    .cli .grid > *:first-child{
        grid-column: 1;
        grid-row: 1;
    }

    .features-main .grid > *:first-child{
        grid-column: 1 / span 1;
        grid-row: 1/ span 1;
    }
    
    .features-main .grid > *:nth-child(2){
        grid-column: 1 / span 1;
        grid-row: 2/ span 1;
    }

    .features-head,
    .features-sub-head,
    .doc-head{
        text-align: center;
    }

    .features-head .grid img,
    .features-sub-head .grid img,
    .doc-head .grid img{
        justify-self: center;
    }
    
}

/* Mobile */

/* This means when the screen is 500px or less */
@media (max-width: 550px){
       .navbar{
           height: 110px;
       }

       .navbar .flex{
           flex-direction: column;
       }

       .navbar ul{
           padding: 10px;
           background-color: rgba(0, 0, 0, 0.1);
       }
}

